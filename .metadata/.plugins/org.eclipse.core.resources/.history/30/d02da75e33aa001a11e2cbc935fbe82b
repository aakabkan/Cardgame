package com.cardgame.cardgame;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import com.cardgame.cardgame.SignupService;

@Controller
@SessionAttributes({"name", "description1", "description2", "description3", "description4","score"})
public class SignupController {
    @Autowired
    SignupService service;

    @Autowired
    UserService userService;
    
	@Autowired
	private GameSetup gameSetup;

    @RequestMapping(value="/signup", method = RequestMethod.GET)
    public String showSignup(ModelMap model){
        return "signup";
    }

    @RequestMapping(value="/signup", method = RequestMethod.POST)
    public String showWelcomePage(ModelMap model, @RequestParam(value="name",required=false) String name, @RequestParam(value="password",required=false) String password, @RequestParam(value="repassword",required=false) String repassword, @RequestParam(value="nPlayers",required=false) String nPlayers){
        if (name==null) {
    		gameSetup.createGame(model,nPlayers);
            return "board";
        }
        if (!service.validateUser(name, password, repassword)) {
            model.put("errorMessage", "Invalid Credentials");
            return "signup";
        }
        User user = new User();
        user.setName(name);
        user.setPassword(password);
        if (service.checkIfNameIsAlreadyUsed(user)) {
            model.put("errorMessage", "Username already exists");
    		return "signup";
        }
		if (model.getAttribute(name)!=null) {
            model.put("errorMessage", "A person is already logged in on this computer");
            return "signup";
		}
        model.put("name", name);
        model.put("password", password);
        userService.save(user);
        return "welcome";
    }

}
